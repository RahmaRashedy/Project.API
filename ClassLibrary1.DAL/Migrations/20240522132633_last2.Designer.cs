// <auto-generated />
using System;
using ClassLibrary1.DAL.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClassLibrary1.DAL.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20240522132633_last2")]
    partial class last2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClassLibrary1.DAL.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 2,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 2,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 4,
                            ProductId = 4,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 5,
                            ProductId = 3,
                            Quantity = 4
                        });
                });

            modelBuilder.Entity("ClassLibrary1.DAL.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 5, 22, 16, 26, 32, 305, DateTimeKind.Local).AddTicks(5653),
                            TotalPrice = 1000m
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 5, 22, 16, 26, 32, 305, DateTimeKind.Local).AddTicks(5723),
                            TotalPrice = 2000m
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 5, 22, 16, 26, 32, 305, DateTimeKind.Local).AddTicks(5729),
                            TotalPrice = 3000m
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 5, 22, 16, 26, 32, 305, DateTimeKind.Local).AddTicks(5735),
                            TotalPrice = 4000m
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 5, 22, 16, 26, 32, 305, DateTimeKind.Local).AddTicks(5741),
                            TotalPrice = 5000m
                        });
                });

            modelBuilder.Entity("ClassLibrary1.DAL.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "computers",
                            Description = "Product1",
                            ImageUrl = "",
                            Name = "product1",
                            Price = 2000m,
                            stock = 10
                        },
                        new
                        {
                            Id = 2,
                            Category = "TV",
                            Description = "Product2",
                            ImageUrl = "",
                            Name = "product2",
                            Price = 4000m,
                            stock = 20
                        },
                        new
                        {
                            Id = 3,
                            Category = "Watches",
                            Description = "Product3",
                            ImageUrl = "",
                            Name = "product3",
                            Price = 2000m,
                            stock = 10
                        },
                        new
                        {
                            Id = 4,
                            Category = "Smart Watches",
                            Description = "Product4",
                            ImageUrl = "",
                            Name = "product4",
                            Price = 2890m,
                            stock = 50
                        },
                        new
                        {
                            Id = 5,
                            Category = "Laptops",
                            Description = "Product5",
                            ImageUrl = "",
                            Name = "product5",
                            Price = 2900m,
                            stock = 90
                        });
                });

            modelBuilder.Entity("ClassLibrary1.DAL.Models.Cart", b =>
                {
                    b.HasOne("ClassLibrary1.DAL.Models.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId");

                    b.HasOne("ClassLibrary1.DAL.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ClassLibrary1.DAL.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
